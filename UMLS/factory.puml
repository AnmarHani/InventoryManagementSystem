@startuml

interface Item {
    +get_price(): Float
    +get_name(): String
}

class Box {
    -items: List[Item]
    +add_item(item: Item): void
    +set_name(name: String): Box
    +get_name(): String
    +get_price(): Float
}

class SingleItem {
    -price: Float
    -name: String
    +set_price(price: Float): SingleItem
    +set_name(name: String): SingleItem
    +get_name(): String
    +get_price(): Float
}

Box --|> Item : implements
SingleItem --|> Item : implements

abstract class ItemFactory {
    {abstract} +create_item(item_type: String): Item
}

class ConcreteItemFactory {
    +create_item(item_type: String): Item
}

ConcreteItemFactory --|> ItemFactory : implements

ConcreteItemFactory ..> Box : creates
ConcreteItemFactory ..> SingleItem : creates

@enduml
